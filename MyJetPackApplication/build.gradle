// gradle公共函数文件导入测试 S
apply from: 'test.gradle'
sayHello('aaa')
// gradle公共函数文件导入测试 E

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.61'

    apply from: 'repo.gradle'

    repositories {
        google()
        if (findPath('repo').exists()) {
            maven {
                url uri(findPath('repo'))
            }
        }
        maven {
            url 'http://112.74.29.196:34272/repository/maven-public'
        }
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${gradle_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "io.realm:realm-gradle-plugin:$realm_gradle_plugin_version"
        if (project_in_debug.toBoolean() && findPath('repo').exists()) {
            classpath 'com.example.myjetpackapplication.plugin:lifecycle:+'
        }
        else {
            classpath "com.example.myjetpackapplication.plugin:lifecycle:$lifecycle_version"
        }
        if (project_in_debug.toBoolean() && findPath('repo').exists()) {
            classpath 'com.example.myjetpackapplication.plugin:realm-helper:+'
        }
        else {
            classpath 'com.example.myjetpackapplication.plugin:realm-helper:1.0.01'
        }
    }
}

allprojects {
    repositories {
        google()
        if (findPath('repo').exists()) {
            maven {
                url uri(findPath('repo'))
            }
        }
        maven {
            url 'http://112.74.29.196:34272/repository/maven-public'
        }
        jcenter()
        maven {
            url "https://jitpack.io"
        }
        maven {
            url "http://maven.aliyun.com/nexus/content/repositories/releases"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
