if (arrayContains(Run_Mode.split(',|&|\\|| '), 'ALONE_BUSINESS_DATABASE_ROOM')) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
if (arrayContains(Run_Mode.split(',|&|\\|| '), 'ALONE_BUSINESS_DATABASE_ROOM')) {
    apply plugin: 'business'
}

android {
    compileSdkVersion sdk_version_compile as int

    defaultConfig {
        minSdkVersion sdk_version_min as int
        targetSdkVersion sdk_version_target as int
        versionCode 1007
        versionName "1.0.07"
        if (arrayContains(Run_Mode.split(',|&|\\|| '), 'ALONE_BUSINESS_DATABASE_ROOM')) {
            multiDexEnabled true
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    if (arrayContains(Run_Mode.split(',|&|\\|| '), 'ALONE_BUSINESS_DATABASE_ROOM')) {
        sourceSets {
            main {
                manifest.srcFile 'src/alone/AndroidManifest.xml'
                java {
                    srcDirs = ['src/main/java', 'src/alone/java']
                }
                res {
                    srcDirs = ['src/main/res', 'src/alone/res']
                }
            }
        }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-core-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$androidx_lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidx_lifecycle_version"
    implementation "com.google.android.material:material:$material_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test.ext:junit-ktx:$androidx_junit_ktx_version"
    androidTestImplementation "androidx.test:runner:$runner_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    implementation "com.example.myjetpackapplication:resources:$resources_version"
    implementation "com.example.myjetpackapplication.annotationprocessor:business-annotation:$business_annotation_version"
    implementation "androidx.room:room-common:$androidx_room_version"
    kapt "androidx.room:room-compiler:$androidx_room_version"
    api "androidx.room:room-guava:$androidx_room_version"
    api "androidx.room:room-ktx:$androidx_room_version"
    api "androidx.room:room-migration:$androidx_room_version"
    api "androidx.room:room-runtime:$androidx_room_version"
    api "androidx.room:room-rxjava2:$androidx_room_version"
    api "com.getbase:floatingactionbutton:$android__floating__action__button_futuresimple_version"
    api "com.github.mcxtzhang:SwipeDelMenuLayout:V$SwipeDelMenuLayout_mcxtzhang_version"
    api "com.github.seelikes.android:mvvm-basic:$mvvm_basic_version"
    api "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    api "com.java.lib:oil:$oil_version"
    api "com.orhanobut:logger:$logger_orhanobut_version"
    if (arrayContains(Run_Mode.split(',|&|\\|| '), 'ALONE_BUSINESS_DATABASE_ROOM')) {
        implementation "com.example.myjetpackapplication:single:$single_version"
    }
}

if (!arrayContains(Run_Mode.split(',|&|\\|| '), 'ALONE_BUSINESS_DATABASE_ROOM')) {
    /**
    * 发布必须配置此项
    * 如果发布至maven服务器
    * 需要配置publish不是project，不可删掉
    * 发布至snapshot服务器需配置以下内容
    * 版本号以-SNAPSHOT结尾
    * 配置deploy.snapshot.url指向maven snapshot服务器地址
    * 配置deploy.snapshot.user.name指向maven snapshot服务器用户名
    * 配置deploy.snapshot.user.password指向maven snapshot服务器密码
    * 发布至release服务器需配置以下内容
    * 版本号不以-SNAPSHOT结尾
    * 配置deploy.release.url指向maven release服务器地址
    * 配置deploy.release.user.name指向maven release服务器用户名
    * 配置deploy.release.user.password指向maven release服务器密码
    */
    ext {
        groupId = 'com.example.myjetpackapplication'
        artifactId = 'business-database-room'
        version = project.extensions.android.defaultConfig.versionName
        description = 'test cases for database-room'
    }

    apply from: "${rootDir}/maven-publish.gradle"
}
